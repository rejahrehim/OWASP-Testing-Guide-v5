name: Markdown Link Check

on:
  pull_request:
    branches:
    - master
    paths:
    - '**.md'

jobs:
  link-check:
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
    - name: Setup Action
      uses: actions/checkout@v1
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Install dependencies
      run: npm install -g markdown-link-check
    - name: Changed Files Exporter
      id: files
      uses: futuratrepadeira/changed-files@v3.0.1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Run link check
      env:
        FILES: '${{ steps.files.outputs.files_updated }} ${{ steps.files.outputs.files_created }}'
      run: |
        echo "The Following files were changed or created:"
        echo $FILES
        touch log err
        for FILE in $FILES; do echo $FILE | grep -q .*\.md\$ && markdown-link-check -c markdown-link-check-config.json $FILE 1>> log 2>> err; done
        if grep -q  \"ERROR:\" err ; then exit 1 ; else echo -e \"No broken links found.\"; fi
    - name: Show broken links
      id: brokenlinks
      if: failure()
      run: |
        cat log | awk -v RS="FILE:" 'match($0, /(\S*\.md).*\[âœ–\].*(\d*\slinks\schecked\.)(.*)/, arr ) { print "FILE:"arr[1] arr[3] > "brokenlinks"}'
        rm -f err log
        cat brokenlinks
        links=`cat brokenlinks`
        links="${links//'%'/'%25'}"
        links="${links//$'\n'/'%0A'}"
        links="${links//$'\r'/'%0D'}"
        echo ::set-output name=links::**Following links are broken:** %0A$links
    - name: Send comment to PR with broken links
      if: failure() && github.event_name == 'pull_request'
      uses: mshick/add-pr-comment@v1
      with:
        message: ${{ steps.brokenlinks.outputs.links }}
        repo-token: ${{ secrets.Comment }}
        allow-repeats: true
